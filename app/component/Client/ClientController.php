<?php

namespace Neoan3\Component\Client;

use Neoan3\Frame\Smabi;
use Neoan3\Model\Client\ClientModel;
use Neoan3\Provider\Auth\Authorization;
use Neoan3\Provider\Model\InitModel;

/**
 * Class ClientController
 * @package Neoan3\Component\Client
 *
 * Generated by neoan3-cli for neoan3 v3.*
 */
class ClientController extends Smabi
{

    /**
     * GET: api.v1/client
     * GET: api.v1/client/{id}
     * GET: api.v1/client?{query-string}
     * @param string|null $id
     * @param array|null $params
     * @return array
     */
    #[InitModel(ClientModel::class)]
    #[Authorization('restrict')]
    function getClient(string $id = null, ?array $params = []): array
    {
        if (isset($params['search'])) {
            return ClientModel::search($params['search']);
        }
        if (isset($params['offset']) && isset($params['limit'])) {
            return ClientModel::find(['^delete_date'], ['orderBy' => ['insert_date', 'desc'], 'limit' => [$params['offset'], $params['limit'] + $params['offset']]]);
        }
        if ($id) {
            return ClientModel::get($id);
        }
        return $params;
    }

    /**
     * POST: api.v1/client
     * @param array $body
     * @return array
     */
    #[InitModel(ClientModel::class)]
    #[Authorization('restrict')]
    function postClient(array $body): array
    {
        return ClientModel::create($body);
    }

    #[InitModel(ClientModel::class)]
    #[Authorization('restrict')]
    function putClient(array $body): array
    {
        foreach ($body['client_contact'] as $i => $contact) {
            $body['client_contact'][$i]['gender'] = '=' . $contact['gender'];
        }
        return ClientModel::update($body);
    }

    #[InitModel(ClientModel::class)]
    #[Authorization('restrict')]
    function deleteClient($id)
    {
        return ClientModel::delete($id);
    }
}
