<?php

namespace Neoan3\Component\Invoicing;

use Neoan3\Apps\Template;
use Neoan3\Component\Settings\SettingsController;
use Neoan3\Frame\Smabi;
use Neoan3\Model\Invoice\InvoiceModel;
use Neoan3\Model\Settings\SettingsModel;
use Neoan3\Provider\Auth\Authorization;
use Neoan3\Provider\Model\InitModel;

/**
 * Class InvoicingController
 * @package Neoan3\Component\Invoicing
 *
 * Generated by neoan3-cli for neoan3 v3.*
 */

class InvoicingController extends Smabi{

    /**
    * GET: api.v1/invoicing
    * GET: api.v1/invoicing/{id}
    * GET: api.v1/invoicing?{query-string}
    * @param string|null $id
    * @param array $params
    * @return array
    */
    #[InitModel(InvoiceModel::class)]
    #[Authorization('restrict')]
    function getInvoicing(?string $id = null, array $params = []): array
    {
        if (isset($params['search'])) {
            return InvoiceModel::search($params['search']);
        }
        if (isset($params['offset']) && isset($params['limit'])) {
            return InvoiceModel::find(['^delete_date'], ['orderBy' => ['insert_date', 'desc'], 'limit' => [$params['offset'], $params['limit'] + $params['offset']]]);
        }
        if($id){
            return InvoiceModel::get($id);
        }

    }

    /**
     * POST: api.v1/invoicing
     * @param array $body
     * @return array
     */
    #[InitModel(InvoiceModel::class)]
    #[InitModel(SettingsModel::class)]
    #[Authorization('restrict')]
    function postInvoicing(array $body): array
    {
        $settings = new SettingsController();
        $invoiceSettings = $settings->getSettings('invoicing');
        $invoiceSettings['object']['runners']['total']++;
        /*$body['invoice_number'] = Template::embrace($invoiceSettings['object']['format'], [
            'status' => $body['status'],
            'running' => str_pad($invoiceSettings['object']['runners'][$body['status']], 5, '0', STR_PAD_LEFT)
        ]);*/
        $invoiceSettings['object']['runners'][$body['status']]++;
        $settings->putSettings($invoiceSettings);

//        return $body;
        return InvoiceModel::create($body);
    }
    #[InitModel(InvoiceModel::class)]
    #[Authorization('restrict')]
    function putInvoicing(array $body)
    {
        return InvoiceModel::update($body);
    }
}
