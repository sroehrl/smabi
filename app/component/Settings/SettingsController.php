<?php

namespace Neoan3\Component\Settings;

use Neoan3\Frame\Smabi;
use Neoan3\Model\Settings\SettingsModel;
use Neoan3\Provider\Auth\Authorization;
use Neoan3\Provider\Model\InitModel;

/**
 * Class SettingsController
 * @package Neoan3\Component\Settings
 *
 * Generated by neoan3-cli for neoan3 v3.*
 */

class SettingsController extends Smabi{

    /**
    * GET: api.v1/settings
    * GET: api.v1/settings/{id}
    * GET: api.v1/settings?{query-string}
    * @param string|null $type
    * @param array $params
    * @return array
    */
    #[Authorization('restrict')]
    #[InitModel(SettingsModel::class)]
    function getSettings(?string $type = null, array $params = []): array
    {
        if($type){
            $type = strtolower($type);
            $try = SettingsModel::find(['name'=>$type]);
            if(!empty($try)){
                return $this->handleJsonOut($try[0]);
            }
            return $this->handleJsonOut(SettingsModel::create([
                'name' => $type,
                'object' => '=' . json_encode($this->generateSettings($type))
            ]));
        }
        return $params;
    }

    /**
     * POST: api.v1/settings
     * @param array $body
     * @return array
     */
    #[Authorization('restrict')]
    #[InitModel(SettingsModel::class)]
    function putSettings(array $body = []): array
    {
        $body = $this->handleJsonIn($body);
        return $this->handleJsonOut(SettingsModel::update($body));
    }

    private function handleJsonOut($answer)
    {
        $answer['object'] = json_decode($answer['object'], true);
        return $answer;
    }
    private function handleJsonIn($answer)
    {
        $answer['object'] = '=' . json_encode($answer['object']);
        return $answer;
    }

    private function generateSettings($type): array
    {
        $structure = [
            'invoicing' => [
                'format' => '{{status}}-YYYY-{{running}}',
                'runners' => [
                    'total' => 0,
                    'estimate' => 1,
                    'invoice' => 1,
                    'draft' => 1
                ],
                'restart' => 'yearly'
            ]
        ];
        return $structure[$type];
    }
}
